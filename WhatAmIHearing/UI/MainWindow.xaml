<Window x:Class="WhatAmIHearing.UI.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WhatAmIHearing.UI"
        xmlns:audio="clr-namespace:WhatAmIHearing.Audio"
        xmlns:spotify="clr-namespace:WhatAmIHearing.Api.Spotify"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        WindowStyle="None"
        ResizeMode="CanMinimize"
        AllowsTransparency="True"
        Background="Transparent"
        ShowActivated="True"
        d:DataContext="{d:DesignInstance local:MainViewModel}"
        Topmost="{Binding Settings.KeepWindowTopmost, Mode=OneWay}">
   <WindowChrome.WindowChrome>
      <WindowChrome CaptionHeight="24"
                    ResizeBorderThickness="0"
                    CornerRadius="2" />
   </WindowChrome.WindowChrome>
   <Window.Resources>
      <ResourceDictionary Source="Resources.xaml" />
   </Window.Resources>

   <Grid Margin="4">
      <Grid.Effect>
         <DropShadowEffect BlurRadius="8"
                           Opacity="0.25"
                           Direction="270"
                           ShadowDepth="2" />
      </Grid.Effect>
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <Rectangle Grid.RowSpan="99"
                 Fill="#D9E8FF"
                 Stroke="#333333"
                 StrokeThickness="1" />

      <TextBlock Grid.Row="0"
                 Text="What Am I Hearing?"
                 FontSize="14"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center" />

      <Button Grid.Row="0"
              Margin="1"
              HorizontalAlignment="Right"
              WindowChrome.IsHitTestVisibleInChrome="True"
              Click="OnCloseClicked"
              Style="{StaticResource CloseButtonStyle}" />

      <Grid Grid.Row="1"
            Width="350"
            Margin="12,12,12,2">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="Auto" />
         </Grid.ColumnDefinitions>

         <Grid Grid.Column="0"
               VerticalAlignment="Center">
            <Grid.RowDefinitions>
               <RowDefinition Height="Auto" />
               <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ComboBox Grid.Row="0"
                      ItemsSource="{Binding DeviceNameList, Mode=OneTime}"
                      SelectedValue="{Binding Settings.SelectedDevice, Mode=TwoWay}"
                      Height="24" />
            <ProgressBar Grid.Row="1"
                         Background="White"
                         Foreground="#69C3FF"
                         Value="{Binding RecorderVm.RecordingProgress, Mode=OneWay}"
                         Height="24" />
            <TextBlock Grid.Row="1"
                       Text="{Binding RecorderVm.RecorderStatusText, Mode=OneWay}"
                       Margin="6,6,0,0"
                       Height="24" />
         </Grid>

         <Button Grid.Column="2"
                 Margin="0,-4,0,0"
                 Style="{StaticResource MainButtonStyle}"
                 Command="{Binding RecordStopCommand}"
                 Width="50"
                 Height="50"
                 Padding="12"
                 HorizontalContentAlignment="Stretch"
                 VerticalContentAlignment="Stretch">
            <Grid>
               <Path Fill="White"
                     Stretch="UniformToFill"
                     Visibility="{Binding RecorderVm.RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static audio:State.Recording}}">
                  <Path.Data>
                     <PathGeometry Figures="M 0,0 L 0,1 1,1 1,0 Z" />
                  </Path.Data>
               </Path>
               <Path Stroke="White"
                     StrokeThickness="4"
                     Stretch="UniformToFill"
                     Visibility="{Binding RecorderVm.RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static audio:State.SendingToShazam}}">
                  <Path.Data>
                     <PathGeometry>
                        <PathGeometry.Figures>
                           <PathFigure StartPoint="0,0">
                              <LineSegment Point="5,5" />
                           </PathFigure>
                           <PathFigure StartPoint="0,5">
                              <LineSegment Point="5,0" />
                           </PathFigure>
                        </PathGeometry.Figures>
                     </PathGeometry>
                  </Path.Data>
               </Path>
               <Ellipse Fill="White"
                        Visibility="{Binding RecorderVm.RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static audio:State.Stopped}}" />
            </Grid>
         </Button>
      </Grid>

      <TextBlock Grid.Row="2"
                 Margin="12,2"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Top"
                 Text="{Binding HotkeyStatusText, StringFormat='Hotkey: {0}', Mode=OneWay}" />

      <Expander Grid.Row="2"
                Margin="12,2"
                Header="Settings">
         <StackPanel Margin="8,2,0,0">
            <CheckBox x:Name="KeepOpenInTrayCheckbox"
                      Grid.Row="2"
                      Margin="6,2"
                      Content="Keep open in system tray"
                      IsChecked="{Binding Settings.KeepOpenInTray, Mode=TwoWay}" />

            <CheckBox Grid.Row="3"
                      Margin="16,2"
                      Content="Launch hidden"
                      Visibility="{Binding ElementName=KeepOpenInTrayCheckbox, Path=IsChecked, Converter={StaticResource VisibleIfTrue}}"
                      IsChecked="{Binding Settings.OpenHidden, Mode=TwoWay}" />

            <CheckBox Grid.Row="4"
                      Margin="6,2"
                      Content="Keep window on top"
                      IsChecked="{Binding Settings.KeepWindowTopmost, Mode=TwoWay}" />
         </StackPanel>
      </Expander>

      <Expander Grid.Row="3"
                Margin="12,2,12,12"
                Header="{Binding SpotifyVm.SignedIn, Converter={StaticResource SignedInStatusConverter}, Mode=OneWay}">
         <StackPanel Margin="8,8,0,0">
            <StackPanel Orientation="Horizontal">
               <Button Style="{StaticResource MainButtonStyle}"
                       Command="{Binding SpotifyVm.SignInOutCommand}"
                       Content="{Binding SpotifyVm.SignedIn, Converter={StaticResource SignInButtonContentConverter}, Mode=OneWay}"
                       HorizontalAlignment="Left" />

               <CheckBox Content="Add detected songs to private playlist"
                         IsEnabled="{Binding SpotifyVm.SignedIn, Mode=OneWay}"
                         IsChecked="{Binding Settings.AddSongsToSpotifyPlaylist, Mode=TwoWay}"
                         VerticalAlignment="Center"
                         Margin="12,0,0,0" />
            </StackPanel>

            <TextBlock Margin="0,8,0,0"
                       Visibility="{Binding SpotifyVm.Result, Converter={StaticResource VisibleIfNotEqual}, ConverterParameter={x:Static spotify:AddToPlaylistResult.None}}"
                       Text="{Binding SpotifyVm.ResultText, StringFormat='Result: {0}', Mode=OneWay}" />
         </StackPanel>

      </Expander>
   </Grid>
</Window>
