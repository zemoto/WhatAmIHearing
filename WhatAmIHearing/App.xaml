<Application x:Class="WhatAmIHearing.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ui="clr-namespace:ZemotoCommon.UI"
             xmlns:commonControls="clr-namespace:ZemotoCommon.UI.Controls">
   <Application.Resources>
      <BooleanToVisibilityConverter x:Key="VisibleIfTrue" />
      <ui:EqualityConverter x:Key="IsEqual" />

      <ui:EqualityToObjectConverter x:Key="VisibleIfNotEqual"
                                    EqualValue="{x:Static Visibility.Collapsed}"
                                    NotEqualValue="{x:Static Visibility.Visible}" />

      <ui:BoolToObjectConverter x:Key="StatusTextColorConverter"
                                TrueValue="Red"
                                FalseValue="Black" />

      <ui:BoolToObjectConverter x:Key="SignedInStatusConverter"
                                TrueValue="Spotify Integration (Signed In)"
                                FalseValue="Spotify Integration (Signed Out)" />

      <ui:BoolToObjectConverter x:Key="SignInButtonContentConverter"
                                TrueValue="Sign Out"
                                FalseValue="Sign In" />

      <SolidColorBrush x:Key="MainColorBrush"
                       Color="#3975A7" />

      <Style x:Key="FocusVisualStyle"
             TargetType="{x:Type Control}">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Control}">
                  <Rectangle Margin="1.5"
                             StrokeDashArray="2 2"
                             RadiusX="2"
                             RadiusY="2"
                             StrokeThickness="1"
                             Stroke="White" />
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="MainButtonStyle"
             TargetType="{x:Type Button}">
         <Setter Property="Width"
                 Value="80" />
         <Setter Property="Height"
                 Value="24" />
         <Setter Property="Foreground"
                 Value="White" />
         <Setter Property="HorizontalContentAlignment"
                 Value="Center" />
         <Setter Property="VerticalContentAlignment"
                 Value="Center" />
         <Setter Property="FontSize"
                 Value="11" />
         <Setter Property="FontWeight"
                 Value="SemiBold" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Effect">
            <Setter.Value>
               <DropShadowEffect BlurRadius="3"
                                 Opacity="0.4"
                                 Direction="270"
                                 ShadowDepth="1" />
            </Setter.Value>
         </Setter>
         <Setter Property="FocusVisualStyle"
                 Value="{StaticResource FocusVisualStyle}" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Border CornerRadius="4"
                          Background="{DynamicResource MainColorBrush}">
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal" />
                           <VisualState x:Name="MouseOver">
                              <Storyboard>
                                 <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="#3D7CB0"
                                                 Duration="0:0:0.1" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Pressed">
                              <Storyboard>
                                 <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="#356F9E"
                                                 Duration="0:0:0.1" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Disabled">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)"
                                                  To="0.8"
                                                  Duration="0:0:0" />
                              </Storyboard>
                           </VisualState>
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>

                     <ContentPresenter Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Border>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="CloseButtonStyle"
             TargetType="{x:Type Button}">
         <Setter Property="Width"
                 Value="44" />
         <Setter Property="Height"
                 Value="24" />
         <Setter Property="IsTabStop"
                 Value="False" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Border x:Name="Border"
                          Background="Transparent"
                          CornerRadius="0,3,0,0">
                     <Path HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Width="10"
                           Height="10"
                           Stroke="Black"
                           StrokeThickness="1"
                           Data="M 0,0 L 10,10 M 0,10 L 10,0" />
                  </Border>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver"
                              Value="True">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#70FFFFFF" />
                     </Trigger>
                     <Trigger Property="IsPressed"
                              Value="True">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#4DFFFFFF" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="RecordPercentSliderStyle"
             TargetType="{x:Type Slider}">
         <Setter Property="Height"
                 Value="32" />
         <Setter Property="Minimum"
                 Value="0" />
         <Setter Property="Maximum"
                 Value="1" />
         <Setter Property="TickFrequency"
                 Value="0.01" />
         <Setter Property="IsSnapToTickEnabled"
                 Value="True" />
         <Setter Property="Focusable"
                 Value="False" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Slider}">
                  <Track Grid.Row="1"
                         x:Name="PART_Track"
                         Margin="-4,0">
                     <Track.DecreaseRepeatButton>
                        <RepeatButton x:Name="LeftSideFill"
                                      Opacity="0"
                                      IsHitTestVisible="False"
                                      Focusable="False">
                           <RepeatButton.Template>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                 <Rectangle Height="22"
                                            VerticalAlignment="Top"
                                            Fill="{StaticResource MainColorBrush}"
                                            Margin="4,0,-4,0" />
                              </ControlTemplate>
                           </RepeatButton.Template>
                        </RepeatButton>
                     </Track.DecreaseRepeatButton>
                     <Track.Thumb>
                        <Thumb>
                           <Thumb.Template>
                              <ControlTemplate TargetType="{x:Type Thumb}">
                                 <Grid Background="Transparent">
                                    <Line Stroke="{StaticResource MainColorBrush}"
                                          HorizontalAlignment="Center"
                                          StrokeThickness="1"
                                          X1="0"
                                          X2="0"
                                          Y1="0"
                                          Y2="22" />

                                    <Path x:Name="ThumbArrow"
                                          Fill="{StaticResource MainColorBrush}"
                                          Height="8"
                                          VerticalAlignment="Bottom"
                                          Data="M 0,8 H 8 L 4,0 Z">
                                       <Path.Effect>
                                          <DropShadowEffect BlurRadius="3"
                                                            Opacity="0.6"
                                                            Direction="270"
                                                            ShadowDepth="1" />
                                       </Path.Effect>
                                    </Path>
                                 </Grid>
                                 <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                       <Setter TargetName="ThumbArrow"
                                               Property="Opacity"
                                               Value="0.4" />
                                    </Trigger>
                                 </ControlTemplate.Triggers>
                              </ControlTemplate>
                           </Thumb.Template>
                        </Thumb>
                     </Track.Thumb>
                  </Track>
                  <ControlTemplate.Triggers>
                     <EventTrigger RoutedEvent="Thumb.DragStarted">
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="LeftSideFill"
                                               Storyboard.TargetProperty="Opacity"
                                               To="0.4"
                                               Duration="0:0:0.1" />
                           </Storyboard>
                        </BeginStoryboard>
                     </EventTrigger>
                     <EventTrigger RoutedEvent="Thumb.DragCompleted">
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="LeftSideFill"
                                               Storyboard.TargetProperty="Opacity"
                                               To="0"
                                               Duration="0:0:0.1" />
                           </Storyboard>
                        </BeginStoryboard>
                     </EventTrigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type ComboBox}"
             TargetType="{x:Type ComboBox}">
         <Setter Property="Foreground"
                 Value="White" />
         <Setter Property="OverridesDefaultStyle"
                 Value="true" />
         <Setter Property="FocusVisualStyle"
                 Value="{StaticResource FocusVisualStyle}" />
         <Setter Property="Padding"
                 Value="8,0,0,1" />
         <Setter Property="ItemContainerStyle">
            <Setter.Value>
               <Style TargetType="{x:Type ComboBoxItem}">
                  <Setter Property="SnapsToDevicePixels"
                          Value="True" />
                  <Setter Property="Foreground"
                          Value="White" />
                  <Setter Property="FocusVisualStyle"
                          Value="{x:Null}" />
                  <Setter Property="OverridesDefaultStyle"
                          Value="true" />
                  <Setter Property="Template">
                     <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                           <Border x:Name="Border"
                                   Padding="8,0,4,0"
                                   SnapsToDevicePixels="true"
                                   Background="Transparent"
                                   Height="22">
                              <ContentPresenter VerticalAlignment="Center" />
                           </Border>
                           <ControlTemplate.Triggers>
                              <MultiTrigger>
                                 <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                    <Condition Property="IsMouseOver"
                                               Value="False" />
                                 </MultiTrigger.Conditions>
                                 <MultiTrigger.Setters>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="#14FFFFFF" />
                                 </MultiTrigger.Setters>
                              </MultiTrigger>
                              <Trigger Property="IsMouseOver"
                                       Value="True">
                                 <Setter TargetName="Border"
                                         Property="Background"
                                         Value="#24FFFFFF" />
                              </Trigger>
                              <Trigger Property="IsKeyboardFocused"
                                       Value="True">
                                 <Setter TargetName="Border"
                                         Property="Background"
                                         Value="#24FFFFFF" />
                              </Trigger>
                           </ControlTemplate.Triggers>
                        </ControlTemplate>
                     </Setter.Value>
                  </Setter>
               </Style>
            </Setter.Value>
         </Setter>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ComboBox}">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                     </Grid.ColumnDefinitions>
                     <ToggleButton Grid.Column="0"
                                   Grid.ColumnSpan="99"
                                   Focusable="False"
                                   ClickMode="Press"
                                   IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Template>
                           <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Border CornerRadius="2"
                                      Background="{DynamicResource MainColorBrush}">
                                 <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                       <VisualState x:Name="Normal" />
                                       <VisualState x:Name="MouseOver">
                                          <Storyboard>
                                             <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                             To="#3D7CB0"
                                                             Duration="0:0:0.1" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Pressed" />
                                       <VisualState x:Name="Disabled">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)"
                                                              To="0.7"
                                                              Duration="0:0:0" />
                                          </Storyboard>
                                       </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                       <VisualState x:Name="Checked">
                                          <Storyboard>
                                             <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                             To="#3D7CB0"
                                                             Duration="0:0:0.1" />
                                             <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                   <DiscreteObjectKeyFrame.Value>
                                                      <CornerRadius TopLeft="2"
                                                                    TopRight="2" />
                                                   </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                             </ObjectAnimationUsingKeyFrames>
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Unchecked" />
                                       <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                 </VisualStateManager.VisualStateGroups>
                                 <Border.Effect>
                                    <DropShadowEffect BlurRadius="3"
                                                      Opacity="0.4"
                                                      Direction="270"
                                                      ShadowDepth="1" />
                                 </Border.Effect>
                              </Border>
                           </ControlTemplate>
                        </ToggleButton.Template>
                     </ToggleButton>

                     <ContentPresenter x:Name="ContentSite"
                                       Grid.Column="0"
                                       IsHitTestVisible="False"
                                       Content="{TemplateBinding SelectionBoxItem}"
                                       ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                       ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left">
                        <ContentPresenter.Resources>
                           <Style TargetType="{x:Type TextBlock}">
                              <Setter Property="TextTrimming"
                                      Value="CharacterEllipsis" />
                           </Style>
                        </ContentPresenter.Resources>
                     </ContentPresenter>

                     <Path Grid.Column="1"
                           VerticalAlignment="Center"
                           Data="M 0 0 L 4 4 L 8 0 Z"
                           Margin="8,2,8,0"
                           Fill="White" />

                     <Popup x:Name="Popup"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Focusable="False"
                            PopupAnimation="Slide"
                            VerticalOffset="-1">
                        <Border x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                Background="#3D7CB0"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                CornerRadius="0,2,2,2"
                                Margin="4,4,4,4">
                           <Border.Effect>
                              <DropShadowEffect BlurRadius="3"
                                                Opacity="0.4"
                                                Direction="270"
                                                ShadowDepth="2" />
                           </Border.Effect>
                           <StackPanel IsItemsHost="True"
                                       KeyboardNavigation.DirectionalNavigation="Contained" />
                        </Border>
                     </Popup>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type commonControls:AnimatedGroupedExpander}"
             TargetType="{x:Type commonControls:AnimatedGroupedExpander}">
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type commonControls:AnimatedGroupedExpander}">
                  <StackPanel>
                     <ToggleButton Content="{TemplateBinding Header}"
                                   IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="1"
                                   Focusable="False">
                        <ToggleButton.Template>
                           <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Grid Background="Transparent"
                                    HorizontalAlignment="Left">
                                 <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                 </Grid.ColumnDefinitions>
                                 <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                       <VisualState x:Name="Checked">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetName="ArrowRotateTransform"
                                                              Storyboard.TargetProperty="Angle"
                                                              To="180"
                                                              Duration="0:0:0.2" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Unchecked">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetName="ArrowRotateTransform"
                                                              Storyboard.TargetProperty="Angle"
                                                              To="360"
                                                              Duration="0:0:0.2" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                 </VisualStateManager.VisualStateGroups>
                                 <Ellipse x:Name="Circle"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Height="18"
                                          Width="18"
                                          Stroke="Black"
                                          Fill="White" />
                                 <Path Grid.Column="0"
                                       Data="M 0,0 L 3,3 L 6,0"
                                       Stretch="Uniform"
                                       Width="14"
                                       Margin="0,1,0,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Stroke="Black"
                                       StrokeThickness="2"
                                       RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                       <RotateTransform x:Name="ArrowRotateTransform"
                                                        Angle="360" />
                                    </Path.RenderTransform>
                                 </Path>
                                 <ContentPresenter Grid.Column="1"
                                                   Margin="4,0,0,0" />
                              </Grid>
                              <ControlTemplate.Triggers>
                                 <Trigger Property="IsMouseOver"
                                          Value="True">
                                    <Setter Property="Stroke"
                                            TargetName="Circle"
                                            Value="{StaticResource MainColorBrush}" />
                                 </Trigger>
                                 <Trigger Property="IsPressed"
                                          Value="True">
                                    <Setter Property="StrokeThickness"
                                            TargetName="Circle"
                                            Value="1.5" />
                                 </Trigger>
                              </ControlTemplate.Triggers>
                           </ControlTemplate>
                        </ToggleButton.Template>
                     </ToggleButton>
                     <StackPanel x:Name="PART_ContentContainer">
                        <ContentPresenter x:Name="PART_Content" />
                     </StackPanel>
                  </StackPanel>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type CheckBox}"
             TargetType="{x:Type CheckBox}">
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="HorizontalAlignment"
                 Value="Left" />
         <Setter Property="FocusVisualStyle">
            <Setter.Value>
               <Style TargetType="{x:Type Control}">
                  <Setter Property="Template">
                     <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                           <Rectangle Margin="-2,-1,-3,-1"
                                      StrokeDashArray="2 2"
                                      RadiusX="2"
                                      RadiusY="2"
                                      StrokeThickness="1"
                                      Stroke="Black" />
                        </ControlTemplate>
                     </Setter.Value>
                  </Setter>
               </Style>
            </Setter.Value>
         </Setter>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type CheckBox}">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                     </Grid.ColumnDefinitions>
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CheckStates">
                           <VisualState x:Name="Checked">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleX"
                                                  To="1"
                                                  Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                       <ElasticEase Oscillations="1" />
                                    </DoubleAnimation.EasingFunction>
                                 </DoubleAnimation>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleY"
                                                  To="1"
                                                  Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                       <ElasticEase Oscillations="1" />
                                    </DoubleAnimation.EasingFunction>
                                 </DoubleAnimation>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Unchecked">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleX"
                                                  To="0"
                                                  Duration="0:0:0.1" />
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleY"
                                                  To="0"
                                                  Duration="0:0:0.1" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>

                     <Rectangle x:Name="Square"
                                Grid.Column="0"
                                Width="14"
                                Height="14"
                                Stroke="Black"
                                RadiusX="1"
                                RadiusY="1"
                                Fill="White" />

                     <Path Grid.Column="0"
                           Margin="0,1,0,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           StrokeThickness="2"
                           StrokeLineJoin="Round"
                           StrokeEndLineCap="Round"
                           StrokeStartLineCap="Round"
                           Stroke="Black"
                           RenderTransformOrigin="0.5,0.5"
                           Data="M 0,3.3 L 2.4,6 L 6,0">
                        <Path.RenderTransform>
                           <ScaleTransform x:Name="CheckmarkScaleTransform" />
                        </Path.RenderTransform>
                     </Path>

                     <ContentPresenter x:Name="ContentPresenter"
                                       Grid.Column="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="4,0,0,1" />
                  </Grid>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver"
                              Value="True">
                        <Setter TargetName="Square"
                                Property="Stroke"
                                Value="{StaticResource MainColorBrush}" />
                     </Trigger>
                     <Trigger Property="IsPressed"
                              Value="True">
                        <Setter TargetName="Square"
                                Property="StrokeThickness"
                                Value="1.5" />
                     </Trigger>
                     <Trigger Property="IsEnabled"
                              Value="False">
                        <Setter TargetName="ContentPresenter"
                                Property="Opacity"
                                Value="0.6" />
                        <Setter TargetName="Square"
                                Property="Fill"
                                Value="#F6F6F6" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
   </Application.Resources>
</Application>