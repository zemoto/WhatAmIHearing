<ui:CommonApp x:Class="WhatAmIHearing.App"
              x:ClassModifier="internal"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:ui="clr-namespace:ZemotoCommon.UI"
              xmlns:commonControls="clr-namespace:ZemotoCommon.UI.Controls"
              xmlns:commonUi="clr-namespace:ZemotoCommon.UI"
              xmlns:result="clr-namespace:WhatAmIHearing.Result">
   <Application.Resources>
      <BooleanToVisibilityConverter x:Key="VisibleIfTrue" />

      <ui:EqualityConverter x:Key="IsEqual" />

      <ui:BoolToObjectConverter x:Key="StatusTextColorConverter"
                                TrueValue="Red"
                                FalseValue="Black" />

      <SolidColorBrush x:Key="MainColorBrush"
                       Color="#3975A7" />
      <SolidColorBrush x:Key="MainColorMouseOverBrush"
                       Color="#3D7CB0" />
      <SolidColorBrush x:Key="MainPressedBrush"
                       Color="#356F9E" />

      <SolidColorBrush x:Key="MainBackgroundBrush"
                       Color="#D9E8FF" />

      <SolidColorBrush x:Key="LightBackgroundBrush"
                       Color="#99FFFFFF" />

      <SolidColorBrush x:Key="ProgressBarFillBrush"
                       Color="#69C3FF" />

      <ControlTemplate x:Key="CopyGlyph"
                       TargetType="{x:Type Control}">
         <Path Fill="Black"
               Stretch="Fill"
               Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" />
      </ControlTemplate>

      <Style x:Key="FocusVisualStyle"
             TargetType="{x:Type Control}">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Control}">
                  <Rectangle Margin="1.5"
                             StrokeDashArray="2 2"
                             RadiusX="2"
                             RadiusY="2"
                             StrokeThickness="1"
                             Stroke="White" />
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="MainButtonStyle"
             TargetType="{x:Type Button}">
         <Setter Property="MinWidth"
                 Value="80" />
         <Setter Property="Height"
                 Value="24" />
         <Setter Property="Padding"
                 Value="8,0" />
         <Setter Property="Foreground"
                 Value="White" />
         <Setter Property="Background"
                 Value="{StaticResource MainColorBrush}" />
         <Setter Property="commonUi:CustomProperties.MouseOverBrush"
                 Value="{StaticResource MainColorMouseOverBrush}" />
         <Setter Property="commonUi:CustomProperties.PressedBrush"
                 Value="{StaticResource MainPressedBrush}" />
         <Setter Property="HorizontalContentAlignment"
                 Value="Center" />
         <Setter Property="VerticalContentAlignment"
                 Value="Center" />
         <Setter Property="FontSize"
                 Value="11" />
         <Setter Property="FontWeight"
                 Value="SemiBold" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="FocusVisualStyle"
                 Value="{StaticResource FocusVisualStyle}" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                     <Rectangle x:Name="background"
                                Fill="{TemplateBinding Background}"
                                RadiusX="4"
                                RadiusY="4">
                        <Rectangle.Effect>
                           <DropShadowEffect BlurRadius="3"
                                             Opacity="0.4"
                                             Direction="270"
                                             ShadowDepth="1" />
                        </Rectangle.Effect>
                     </Rectangle>

                     <ContentPresenter Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Grid>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver"
                              Value="True">
                        <Setter TargetName="background"
                                Property="Fill"
                                Value="{Binding Path=(commonUi:CustomProperties.MouseOverBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                     </Trigger>
                     <Trigger Property="IsPressed"
                              Value="True">
                        <Setter TargetName="background"
                                Property="Fill"
                                Value="{Binding Path=(commonUi:CustomProperties.PressedBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="CloseButtonStyle"
             TargetType="{x:Type Button}">
         <Setter Property="Width"
                 Value="44" />
         <Setter Property="Height"
                 Value="24" />
         <Setter Property="IsTabStop"
                 Value="False" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Border x:Name="Border"
                          Background="Transparent"
                          CornerRadius="0,3,0,0">
                     <Path HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Width="10"
                           Height="10"
                           Stroke="Black"
                           StrokeThickness="1"
                           Data="M 0,0 L 10,10 M 0,10 L 10,0" />
                  </Border>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver"
                              Value="True">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#70FFFFFF" />
                     </Trigger>
                     <Trigger Property="IsPressed"
                              Value="True">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#4DFFFFFF" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="GlyphButtonStyle"
             TargetType="{x:Type Button}">
         <Setter Property="Focusable"
                 Value="False" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Button}">
                  <Grid Background="Transparent"
                        Opacity="0.5">
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal" />
                           <VisualState x:Name="MouseOver">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)"
                                                  To="1.0"
                                                  Duration="0" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Pressed">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)"
                                                  To="0.6"
                                                  Duration="0" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Disabled" />
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                     <ContentPresenter />
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="RecordPercentSliderStyle"
             TargetType="{x:Type Slider}">
         <Setter Property="Height"
                 Value="32" />
         <Setter Property="Minimum"
                 Value="0" />
         <Setter Property="Maximum"
                 Value="1" />
         <Setter Property="TickFrequency"
                 Value="0.01" />
         <Setter Property="IsSnapToTickEnabled"
                 Value="True" />
         <Setter Property="Focusable"
                 Value="False" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Slider}">
                  <Track Grid.Row="1"
                         x:Name="PART_Track"
                         Margin="-4,0">
                     <Track.DecreaseRepeatButton>
                        <RepeatButton x:Name="LeftSideFill"
                                      Opacity="0"
                                      IsHitTestVisible="False"
                                      Focusable="False">
                           <RepeatButton.Template>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                 <Rectangle Height="22"
                                            VerticalAlignment="Top"
                                            Fill="{StaticResource MainColorBrush}"
                                            Margin="4,0,-4,0" />
                              </ControlTemplate>
                           </RepeatButton.Template>
                        </RepeatButton>
                     </Track.DecreaseRepeatButton>
                     <Track.Thumb>
                        <Thumb>
                           <Thumb.Template>
                              <ControlTemplate TargetType="{x:Type Thumb}">
                                 <Grid Background="Transparent">
                                    <Line Stroke="{StaticResource MainColorBrush}"
                                          HorizontalAlignment="Center"
                                          StrokeThickness="1"
                                          X1="0"
                                          X2="0"
                                          Y1="0"
                                          Y2="22" />

                                    <Path x:Name="ThumbArrow"
                                          Fill="{StaticResource MainColorBrush}"
                                          Height="8"
                                          VerticalAlignment="Bottom"
                                          Data="M 0,8 H 8 L 4,0 Z">
                                       <Path.Effect>
                                          <DropShadowEffect BlurRadius="3"
                                                            Opacity="0.6"
                                                            Direction="270"
                                                            ShadowDepth="1" />
                                       </Path.Effect>
                                    </Path>
                                 </Grid>
                                 <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                       <Setter TargetName="ThumbArrow"
                                               Property="Opacity"
                                               Value="0.4" />
                                    </Trigger>
                                 </ControlTemplate.Triggers>
                              </ControlTemplate>
                           </Thumb.Template>
                        </Thumb>
                     </Track.Thumb>
                  </Track>
                  <ControlTemplate.Triggers>
                     <EventTrigger RoutedEvent="Thumb.DragStarted">
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="LeftSideFill"
                                               Storyboard.TargetProperty="Opacity"
                                               To="0.4"
                                               Duration="0:0:0.1" />
                           </Storyboard>
                        </BeginStoryboard>
                     </EventTrigger>
                     <EventTrigger RoutedEvent="Thumb.DragCompleted">
                        <BeginStoryboard>
                           <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="LeftSideFill"
                                               Storyboard.TargetProperty="Opacity"
                                               To="0"
                                               Duration="0:0:0.1" />
                           </Storyboard>
                        </BeginStoryboard>
                     </EventTrigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type ComboBox}"
             TargetType="{x:Type ComboBox}">
         <Setter Property="Foreground"
                 Value="White" />
         <Setter Property="OverridesDefaultStyle"
                 Value="true" />
         <Setter Property="FocusVisualStyle"
                 Value="{StaticResource FocusVisualStyle}" />
         <Setter Property="Padding"
                 Value="8,0,0,1" />
         <Setter Property="ItemContainerStyle">
            <Setter.Value>
               <Style TargetType="{x:Type ComboBoxItem}">
                  <Setter Property="SnapsToDevicePixels"
                          Value="True" />
                  <Setter Property="Foreground"
                          Value="White" />
                  <Setter Property="FocusVisualStyle"
                          Value="{x:Null}" />
                  <Setter Property="OverridesDefaultStyle"
                          Value="true" />
                  <Setter Property="Template">
                     <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                           <Border x:Name="Border"
                                   Padding="8,0,4,0"
                                   SnapsToDevicePixels="true"
                                   Background="Transparent"
                                   Height="22">
                              <ContentPresenter VerticalAlignment="Center" />
                           </Border>
                           <ControlTemplate.Triggers>
                              <MultiTrigger>
                                 <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                    <Condition Property="IsMouseOver"
                                               Value="False" />
                                 </MultiTrigger.Conditions>
                                 <MultiTrigger.Setters>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="#14FFFFFF" />
                                 </MultiTrigger.Setters>
                              </MultiTrigger>
                              <Trigger Property="IsMouseOver"
                                       Value="True">
                                 <Setter TargetName="Border"
                                         Property="Background"
                                         Value="#24FFFFFF" />
                              </Trigger>
                              <Trigger Property="IsKeyboardFocused"
                                       Value="True">
                                 <Setter TargetName="Border"
                                         Property="Background"
                                         Value="#24FFFFFF" />
                              </Trigger>
                           </ControlTemplate.Triggers>
                        </ControlTemplate>
                     </Setter.Value>
                  </Setter>
               </Style>
            </Setter.Value>
         </Setter>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ComboBox}">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                     </Grid.ColumnDefinitions>
                     <ToggleButton Grid.Column="0"
                                   Grid.ColumnSpan="99"
                                   Focusable="False"
                                   ClickMode="Press"
                                   IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Template>
                           <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Rectangle RadiusX="2"
                                         RadiusY="2"
                                         Fill="{DynamicResource MainColorBrush}">
                                 <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                       <VisualState x:Name="Normal" />
                                       <VisualState x:Name="MouseOver">
                                          <Storyboard>
                                             <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                             To="#3D7CB0"
                                                             Duration="0:0:0.1" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Pressed" />
                                       <VisualState x:Name="Disabled">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetProperty="(Shape.Opacity)"
                                                              To="0.7"
                                                              Duration="0:0:0" />
                                          </Storyboard>
                                       </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                       <VisualState x:Name="Checked">
                                          <Storyboard>
                                             <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                             To="#3D7CB0"
                                                             Duration="0:0:0.1" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Unchecked" />
                                       <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                 </VisualStateManager.VisualStateGroups>
                                 <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="3"
                                                      Opacity="0.4"
                                                      Direction="270"
                                                      ShadowDepth="1" />
                                 </Rectangle.Effect>
                              </Rectangle>
                           </ControlTemplate>
                        </ToggleButton.Template>
                     </ToggleButton>

                     <ContentPresenter x:Name="ContentSite"
                                       Grid.Column="0"
                                       IsHitTestVisible="False"
                                       Content="{TemplateBinding SelectionBoxItem}"
                                       ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                       ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left">
                        <ContentPresenter.Resources>
                           <Style TargetType="{x:Type TextBlock}">
                              <Setter Property="TextTrimming"
                                      Value="CharacterEllipsis" />
                           </Style>
                        </ContentPresenter.Resources>
                     </ContentPresenter>

                     <Path Grid.Column="1"
                           VerticalAlignment="Center"
                           Data="M 0 0 L 4 4 L 8 0 Z"
                           Margin="8,2,8,0"
                           Fill="White" />

                     <Popup x:Name="Popup"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Focusable="False"
                            PopupAnimation="Slide"
                            VerticalOffset="-1">
                        <Grid SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              Margin="4,4,4,4">
                           <Border Background="#3D7CB0"
                                   CornerRadius="0,0,2,2">
                              <Border.Effect>
                                 <DropShadowEffect BlurRadius="3"
                                                   Opacity="0.4"
                                                   Direction="270"
                                                   ShadowDepth="2" />
                              </Border.Effect>
                           </Border>
                           <StackPanel IsItemsHost="True"
                                       KeyboardNavigation.DirectionalNavigation="Contained" />
                        </Grid>
                     </Popup>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type commonControls:AnimatedGroupedExpander}"
             TargetType="{x:Type commonControls:AnimatedGroupedExpander}">
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type commonControls:AnimatedGroupedExpander}">
                  <StackPanel>
                     <ToggleButton Content="{TemplateBinding Header}"
                                   IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="1"
                                   Focusable="False">
                        <ToggleButton.Template>
                           <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Grid Background="Transparent"
                                    HorizontalAlignment="Left">
                                 <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                 </Grid.ColumnDefinitions>
                                 <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                       <VisualState x:Name="Checked">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetName="ArrowRotateTransform"
                                                              Storyboard.TargetProperty="Angle"
                                                              To="180"
                                                              Duration="0:0:0.2" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Unchecked">
                                          <Storyboard>
                                             <DoubleAnimation Storyboard.TargetName="ArrowRotateTransform"
                                                              Storyboard.TargetProperty="Angle"
                                                              To="360"
                                                              Duration="0:0:0.2" />
                                          </Storyboard>
                                       </VisualState>
                                       <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                 </VisualStateManager.VisualStateGroups>
                                 <Ellipse x:Name="Circle"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Height="18"
                                          Width="18"
                                          Stroke="Black"
                                          Fill="White" />
                                 <Path Grid.Column="0"
                                       Data="M 0,0 L 3,3 L 6,0"
                                       Stretch="Uniform"
                                       Width="14"
                                       Margin="0,1,0,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Stroke="Black"
                                       StrokeThickness="2"
                                       RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                       <RotateTransform x:Name="ArrowRotateTransform"
                                                        Angle="360" />
                                    </Path.RenderTransform>
                                 </Path>
                                 <ContentPresenter Grid.Column="1"
                                                   Margin="4,0.5,0,0" />
                              </Grid>
                              <ControlTemplate.Triggers>
                                 <Trigger Property="IsMouseOver"
                                          Value="True">
                                    <Setter Property="Stroke"
                                            TargetName="Circle"
                                            Value="{StaticResource MainColorBrush}" />
                                 </Trigger>
                                 <Trigger Property="IsPressed"
                                          Value="True">
                                    <Setter Property="StrokeThickness"
                                            TargetName="Circle"
                                            Value="1.5" />
                                 </Trigger>
                              </ControlTemplate.Triggers>
                           </ControlTemplate>
                        </ToggleButton.Template>
                     </ToggleButton>
                     <StackPanel x:Name="PART_ContentContainer">
                        <ContentPresenter x:Name="PART_Content" />
                     </StackPanel>
                  </StackPanel>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="{x:Type CheckBox}"
             TargetType="{x:Type CheckBox}">
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="HorizontalAlignment"
                 Value="Left" />
         <Setter Property="FocusVisualStyle">
            <Setter.Value>
               <Style TargetType="{x:Type Control}">
                  <Setter Property="Template">
                     <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                           <Rectangle Margin="-2,-1,-3,-1"
                                      StrokeDashArray="2 2"
                                      RadiusX="2"
                                      RadiusY="2"
                                      StrokeThickness="1"
                                      Stroke="Black" />
                        </ControlTemplate>
                     </Setter.Value>
                  </Setter>
               </Style>
            </Setter.Value>
         </Setter>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type CheckBox}">
                  <Grid>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                     </Grid.ColumnDefinitions>
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CheckStates">
                           <VisualState x:Name="Checked">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleX"
                                                  To="1"
                                                  Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                       <ElasticEase Oscillations="1" />
                                    </DoubleAnimation.EasingFunction>
                                 </DoubleAnimation>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleY"
                                                  To="1"
                                                  Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                       <ElasticEase Oscillations="1" />
                                    </DoubleAnimation.EasingFunction>
                                 </DoubleAnimation>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Unchecked">
                              <Storyboard>
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleX"
                                                  To="0"
                                                  Duration="0:0:0.1" />
                                 <DoubleAnimation Storyboard.TargetName="CheckmarkScaleTransform"
                                                  Storyboard.TargetProperty="ScaleY"
                                                  To="0"
                                                  Duration="0:0:0.1" />
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>

                     <Rectangle x:Name="Square"
                                Grid.Column="0"
                                Width="14"
                                Height="14"
                                Stroke="Black"
                                RadiusX="1"
                                RadiusY="1"
                                Fill="White" />

                     <Path Grid.Column="0"
                           Margin="1,1,0,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           StrokeThickness="2"
                           StrokeLineJoin="Round"
                           StrokeEndLineCap="Round"
                           StrokeStartLineCap="Round"
                           Stroke="Black"
                           RenderTransformOrigin="0.5,0.5"
                           Data="M 0,3.3 L 2.4,6 L 6,0">
                        <Path.RenderTransform>
                           <ScaleTransform x:Name="CheckmarkScaleTransform" />
                        </Path.RenderTransform>
                     </Path>

                     <ContentPresenter x:Name="ContentPresenter"
                                       Grid.Column="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="4,0,0,1" />
                  </Grid>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver"
                              Value="True">
                        <Setter TargetName="Square"
                                Property="Stroke"
                                Value="{StaticResource MainColorBrush}" />
                     </Trigger>
                     <Trigger Property="IsPressed"
                              Value="True">
                        <Setter TargetName="Square"
                                Property="StrokeThickness"
                                Value="1.5" />
                     </Trigger>
                     <Trigger Property="IsEnabled"
                              Value="False">
                        <Setter Property="Opacity"
                                Value="0.6" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <DataTemplate DataType="{x:Type result:SongViewModel}">
         <Grid Background="{StaticResource MainBackgroundBrush}">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    CornerRadius="8"
                    Background="{StaticResource LightBackgroundBrush}"
                    VerticalAlignment="Center">
               <Image Source="{Binding CoverArt, Mode=OneTime}"
                      Margin="8"
                      Stretch="Uniform"
                      Width="100"
                      Height="100" />
            </Border>

            <Border Grid.Column="1"
                    Margin="8,0,0,0"
                    CornerRadius="8"
                    Background="{StaticResource LightBackgroundBrush}">
               <Grid Margin="12,8,12,10">
                  <Grid.RowDefinitions>
                     <RowDefinition Height="Auto" />
                     <RowDefinition Height="Auto" />
                     <RowDefinition Height="*" />
                  </Grid.RowDefinitions>

                  <Grid Grid.Row="0">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                     </Grid.ColumnDefinitions>
                     <TextBlock Grid.Column="0"
                                Text="{Binding Title, Mode=OneTime}"
                                TextWrapping="Wrap"
                                FontWeight="Bold"
                                FontSize="20" />

                     <Button Grid.Column="1"
                             VerticalAlignment="Top"
                             Margin="6,7.5,0,0"
                             Width="12.5"
                             Height="14"
                             ToolTip="Copy title to clipboard"
                             Style="{StaticResource GlyphButtonStyle}"
                             Command="{Binding CopyTitleToClipboard, Mode=OneTime}">
                        <Control Template="{StaticResource CopyGlyph}" />
                     </Button>
                  </Grid>

                  <TextBlock Grid.Row="1"
                             Text="{Binding Subtitle, Mode=OneTime}"
                             TextWrapping="Wrap"
                             Margin="0,8,0,0"
                             FontWeight="DemiBold"
                             FontSize="16" />

                  <UniformGrid Grid.Row="2"
                               Columns="3"
                               Margin="-2,12,-2,0"
                               VerticalAlignment="Bottom">
                     <Button Style="{StaticResource MainButtonStyle}"
                             Content="YouTube"
                             Command="{Binding FindInYouTubeCommand, Mode=OneTime}"
                             MinWidth="60"
                             Background="#FF0000"
                             commonUi:CustomProperties.MouseOverBrush="#ff3030"
                             commonUi:CustomProperties.PressedBrush="#F00000"
                             Margin="0,0,4,0" />
                     <Button Style="{StaticResource MainButtonStyle}"
                             Content="Spotify"
                             Command="{Binding FindInSpotifyCommand, Mode=OneTime}"
                             MinWidth="60"
                             Background="#1DB954"
                             commonUi:CustomProperties.MouseOverBrush="#1ec157"
                             commonUi:CustomProperties.PressedBrush="#10B050"
                             Margin="0,0,4,0" />
                     <Button Style="{StaticResource MainButtonStyle}"
                             Content="Shazam"
                             Command="{x:Static commonUi:UtilityCommands.OpenInBrowserCommand}"
                             CommandParameter="{Binding ShazamUrl, Mode=OneTime}"
                             MinWidth="60"
                             Background="#0088FF"
                             commonUi:CustomProperties.MouseOverBrush="#088cff"
                             commonUi:CustomProperties.PressedBrush="#0080F0" />
                  </UniformGrid>
               </Grid>
            </Border>
         </Grid>
      </DataTemplate>

      <Style x:Key="ScrollBarPageButtonStyle"
             TargetType="{x:Type RepeatButton}">
         <Setter Property="SnapsToDevicePixels"
                 Value="True" />
         <Setter Property="OverridesDefaultStyle"
                 Value="True" />
         <Setter Property="IsTabStop"
                 Value="False" />
         <Setter Property="Focusable"
                 Value="False" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type RepeatButton}">
                  <Border Background="Transparent" />
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="VerticalScrollBarStyle"
             TargetType="{x:Type ScrollBar}">
         <Setter Property="MinWidth"
                 Value="0" />
         <Setter Property="Width"
                 Value="8" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ScrollBar}">
                  <Grid Margin="0,1,2,1"
                        HorizontalAlignment="Right"
                        Width="6">
                     <Rectangle Fill="{StaticResource MainColorBrush}"
                                Opacity="0.2"
                                RadiusX="3"
                                RadiusY="3" />
                     <Track x:Name="PART_Track"
                            IsDirectionReversed="true"
                            Opacity="0.9">
                        <Track.DecreaseRepeatButton>
                           <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                         Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                           <Thumb>
                              <Thumb.Template>
                                 <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle Fill="{StaticResource MainColorBrush}"
                                               RadiusX="3"
                                               RadiusY="3" />
                                 </ControlTemplate>
                              </Thumb.Template>
                           </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                           <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                         Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                     </Track>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="HistoryListBoxItemContainerStyle"
             TargetType="{x:Type ListBoxItem}">
         <Setter Property="FocusVisualStyle">
            <Setter.Value>
               <Style TargetType="{x:Type Control}">
                  <Setter Property="Template">
                     <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                           <Rectangle Margin="1.5"
                                      StrokeDashArray="2 2"
                                      RadiusX="2"
                                      RadiusY="2"
                                      StrokeThickness="1"
                                      Stroke="Black" />
                        </ControlTemplate>
                     </Setter.Value>
                  </Setter>
               </Style>
            </Setter.Value>
         </Setter>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ListBoxItem}">
                  <Grid>
                     <Rectangle x:Name="background"
                                Opacity="0"
                                Fill="{StaticResource MainColorBrush}"
                                RadiusX="2"
                                RadiusY="2" />
                     <ContentPresenter MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Mode=OneWay}" />
                  </Grid>
                  <ControlTemplate.Triggers>
                     <MultiTrigger>
                        <MultiTrigger.Conditions>
                           <Condition Property="IsSelected"
                                      Value="False" />
                           <Condition Property="IsMouseOver"
                                      Value="True" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                           <Setter TargetName="background"
                                   Property="Opacity"
                                   Value="0.2" />
                        </MultiTrigger.Setters>
                     </MultiTrigger>
                     <Trigger Property="IsSelected"
                              Value="True">
                        <Setter TargetName="background"
                                Property="Opacity"
                                Value="0.4" />
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <DataTemplate x:Key="HistoryListBoxItemTemplate"
                    DataType="{x:Type result:SongViewModel}">
         <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="*" />
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       TextTrimming="CharacterEllipsis"
                       Margin="4,2"
                       HorizontalAlignment="Left"
                       Text="{Binding SearchText, Mode=OneTime}" />

            <Button x:Name="CopyButton"
                    Grid.Column="1"
                    Visibility="Hidden"
                    Margin="0,0,12,0"
                    Width="9"
                    Height="10"
                    ToolTip="Copy title to clipboard"
                    Style="{StaticResource GlyphButtonStyle}"
                    Command="{Binding CopyTitleToClipboard, Mode=OneTime}">
               <Control Template="{StaticResource CopyGlyph}" />
            </Button>

            <Button x:Name="DeleteButton"
                    Grid.Column="2"
                    Visibility="Hidden"
                    Margin="0,0,8,0"
                    Width="9"
                    Height="9"
                    ToolTip="Delete from history"
                    Style="{StaticResource GlyphButtonStyle}"
                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext.DeleteSongFromHistoryCommand, Mode=OneTime}"
                    CommandParameter="{Binding ., Mode=OneTime}">
               <Path Stretch="Fill"
                     StrokeThickness="1"
                     Stroke="Black"
                     Fill="Black"
                     Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
            </Button>
         </Grid>
         <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
               <Setter TargetName="DeleteButton"
                       Property="Visibility"
                       Value="Visible" />
               <Setter TargetName="CopyButton"
                       Property="Visibility"
                       Value="Visible" />
            </Trigger>
         </DataTemplate.Triggers>
      </DataTemplate>

      <Style x:Key="HistoryListBoxStyle"
             TargetType="{x:Type ListBox}">
         <Setter Property="ItemContainerStyle"
                 Value="{StaticResource HistoryListBoxItemContainerStyle}" />
         <Setter Property="ItemTemplate"
                 Value="{StaticResource HistoryListBoxItemTemplate}" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ListBox}">
                  <Border CornerRadius="4"
                          BorderBrush="{StaticResource MainColorBrush}"
                          BorderThickness="1"
                          Background="{StaticResource LightBackgroundBrush}">
                     <ScrollViewer HorizontalScrollBarVisibility="Hidden">
                        <ScrollViewer.Template>
                           <ControlTemplate TargetType="{x:Type ScrollViewer}">
                              <Grid>
                                 <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                 </Grid.ColumnDefinitions>
                                 <ScrollContentPresenter Grid.Column="0" />
                                 <ScrollBar x:Name="PART_VerticalScrollBar"
                                            Grid.Column="1"
                                            Value="{TemplateBinding VerticalOffset}"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Style="{StaticResource VerticalScrollBarStyle}" />
                              </Grid>
                           </ControlTemplate>
                        </ScrollViewer.Template>
                        <StackPanel Margin="2,1"
                                    IsItemsHost="True" />
                     </ScrollViewer>
                  </Border>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
         <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
               <Setter Property="Opacity"
                       Value="0.7" />
               <Setter Property="ToolTip"
                       Value="Disabled during recording" />
            </Trigger>
         </Style.Triggers>
      </Style>

      <ControlTemplate x:Key="HistoryResizeGripperTemplate"
                       TargetType="{x:Type commonControls:ResizeGripper}">
         <Grid Width="50"
               Height="12"
               Background="Transparent">
            <Rectangle x:Name="rect"
                       Height="3"
                       Opacity="0.2"
                       Fill="Black"
                       RadiusX="2"
                       RadiusY="2"
                       Width="20" />
         </Grid>
         <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
               <Setter TargetName="rect"
                       Property="Opacity"
                       Value="0.5" />
            </Trigger>
         </ControlTemplate.Triggers>
      </ControlTemplate>

   </Application.Resources>
</ui:CommonApp>