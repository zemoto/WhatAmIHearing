<Window x:Class="WhatAmIHearing.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WhatAmIHearing"
        xmlns:ui="clr-namespace:ZemotoUI"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        WindowStyle="None"
        ResizeMode="CanMinimize"
        AllowsTransparency="True"
        Background="Transparent"
        ShowActivated="True"
        d:DataContext="{d:DesignData Type={x:Type local:MainViewModel}}">
   <WindowChrome.WindowChrome>
      <WindowChrome CaptionHeight="24"
                    ResizeBorderThickness="0"
                    CornerRadius="4" />
   </WindowChrome.WindowChrome>
   <Window.Resources>
      <ResourceDictionary>
         <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="ControlStyles.xaml" />
         </ResourceDictionary.MergedDictionaries>

         <ui:EqualityToVisibilityConverter x:Key="VisibleIfEqual" />
      </ResourceDictionary>
   </Window.Resources>

   <Grid Margin="4">
      <Grid.Effect>
         <DropShadowEffect BlurRadius="8"
                           Opacity="0.25"
                           Direction="270"
                           ShadowDepth="2" />
      </Grid.Effect>
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <Rectangle Grid.RowSpan="99"
                 Fill="#D9E8FF"
                 RadiusX="4"
                 RadiusY="4" />

      <TextBlock Grid.Row="0"
                 Text="What Am I Hearing?"
                 FontSize="14"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center" />

      <Button Grid.Row="0"
              Margin="4,0"
              HorizontalAlignment="Right"
              WindowChrome.IsHitTestVisibleInChrome="True"
              Click="OnCloseClicked"
              Style="{StaticResource CloseButtonStyle}" />

      <Grid Grid.Row="1"
            Width="350"
            Margin="12,12,12,2">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="Auto" />
         </Grid.ColumnDefinitions>

         <Grid Grid.Column="0"
               VerticalAlignment="Center">
            <Grid.RowDefinitions>
               <RowDefinition Height="Auto" />
               <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ComboBox Grid.Row="0"
                      ItemsSource="{Binding DeviceNameList, Mode=OneTime}"
                      SelectedValue="{Binding Settings.SelectedDevice, Mode=TwoWay}"
                      Height="24" />
            <ProgressBar Grid.Row="1"
                         Background="White"
                         Foreground="#69C3FF"
                         Value="{Binding Source={x:Static local:StatusReport.Status}, Path=Progress, Mode=OneWay}"
                         Height="24" />
            <TextBlock Grid.Row="1"
                       Text="{Binding Source={x:Static local:StatusReport.Status}, Path=Text, Mode=OneWay}"
                       Margin="6,6,0,0"
                       Height="24" />
         </Grid>

         <Button Grid.Column="2"
                 Margin="0,-4,0,0"
                 Style="{StaticResource PlayStopButtonStyle}"
                 Command="{Binding RecordStopCommand}">
            <Grid>
               <Path Fill="White"
                     Stretch="UniformToFill"
                     Visibility="{Binding RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static local:State.Recording}}">
                  <Path.Data>
                     <PathGeometry Figures="M 0,0 L 0,1 1,1 1,0 Z" />
                  </Path.Data>
               </Path>
               <Path Stroke="White"
                     StrokeThickness="4"
                     Stretch="UniformToFill"
                     Visibility="{Binding RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static local:State.SendingToShazam}}">
                  <Path.Data>
                     <PathGeometry>
                        <PathGeometry.Figures>
                           <PathFigure StartPoint="0,0">
                              <LineSegment Point="5,5" />
                           </PathFigure>
                           <PathFigure StartPoint="0,5">
                              <LineSegment Point="5,0" />
                           </PathFigure>
                        </PathGeometry.Figures>
                     </PathGeometry>
                  </Path.Data>
               </Path>
               <Ellipse Fill="White"
                        Visibility="{Binding RecorderState, Converter={StaticResource VisibleIfEqual}, ConverterParameter={x:Static local:State.Stopped}}" />
            </Grid>
         </Button>
      </Grid>

      <CheckBox Grid.Row="2"
                Margin="12,2,12,2"
                Content="Keep open in system tray"
                IsChecked="{Binding Settings.KeepOpenInTray, Mode=TwoWay}" />

      <TextBlock Grid.Row="2"
                 Margin="12,2,12,2"
                 HorizontalAlignment="Right">
         <Run Text="Hotkey: " /><Run Text="{Binding HotkeyStatusText, Mode=OneWay}" />
      </TextBlock>

      <CheckBox Grid.Row="3"
                Margin="12,2,12,12"
                Content="Open hidden"
                IsChecked="{Binding Settings.OpenHidden, Mode=TwoWay}" />
   </Grid>
</Window>
