<Window x:Class="WhatAmIHearing.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WhatAmIHearing"
        xmlns:audio="clr-namespace:WhatAmIHearing.Audio"
        xmlns:common="clr-namespace:ZemotoCommon"
        xmlns:commonUi="clr-namespace:ZemotoCommon.UI"
        xmlns:commonControls="clr-namespace:ZemotoCommon.UI.Controls"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        WindowStyle="None"
        ResizeMode="CanMinimize"
        AllowsTransparency="False"
        Background="Transparent"
        ShowActivated="True"
        SnapsToDevicePixels="True"
        UseLayoutRounding="True"
        d:DataContext="{d:DesignInstance local:MainViewModel}"
        Topmost="{Binding Settings.KeepWindowTopmost, Mode=OneWay}">
   <WindowChrome.WindowChrome>
      <WindowChrome CaptionHeight="24" />
   </WindowChrome.WindowChrome>

   <Grid Background="{StaticResource MainBackgroundBrush}">
      <Grid.RowDefinitions>
         <RowDefinition Height="24" />
         <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0"
                 Text="What Am I Hearing?"
                 FontSize="14"
                 Margin="0,3,0,0"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top" />

      <Button Grid.Row="0"
              Margin="0,1,1,0"
              HorizontalAlignment="Right"
              WindowChrome.IsHitTestVisibleInChrome="True"
              Click="OnCloseClicked"
              Style="{StaticResource CloseButtonStyle}"
              IsCancel="True" />

      <StackPanel x:Name="WindowContents"
                  Grid.Row="1"
                  Margin="12,8,12,12"
                  Width="350">

         <audio:RecorderControls DataContext="{Binding RecorderVm, Mode=OneTime}" />

         <commonControls:AnimatedGroupedExpander Header="Window Settings"
                                                 Margin="0,0,0,4"
                                                 GroupName="Settings">
            <StackPanel Margin="16,2,0,0">
               <CheckBox Margin="0,0,0,2"
                         Content="Launch on Windows startup"
                         IsEnabled="{x:Static common:WindowsStartup.AllowedToStartWithWindows}"
                         ToolTip="{x:Static common:WindowsStartup.NotAllowedReason}"
                         IsChecked="{Binding Settings.LaunchOnWindowsStartup, Mode=TwoWay}" />

               <CheckBox x:Name="KeepOpenInTrayCheckbox"
                         Margin="0,0,0,2"
                         Content="Keep open in system tray"
                         IsChecked="{Binding Settings.KeepOpenInTray, Mode=TwoWay}" />

               <CheckBox Margin="8,2"
                         Content="Launch hidden"
                         Visibility="{Binding ElementName=KeepOpenInTrayCheckbox, Path=IsChecked, Converter={StaticResource VisibleIfTrue}, Mode=OneWay}"
                         IsChecked="{Binding Settings.OpenHidden, Mode=TwoWay}" />

               <CheckBox Margin="0,2,0,0"
                         Content="Keep window on top"
                         IsChecked="{Binding Settings.KeepWindowTopmost, Mode=TwoWay}" />
            </StackPanel>
         </commonControls:AnimatedGroupedExpander>

         <commonControls:AnimatedGroupedExpander Header="Recorder Settings"
                                                 GroupName="Settings"
                                                 Margin="0,0,0,4">
            <StackPanel Margin="16,2,0,0">
               <StackPanel Orientation="Horizontal"
                           Margin="0,0,8,4"
                           HorizontalAlignment="Left">
                  <TextBlock Text="Record Hotkey:"
                             Margin="0,0,8,0"
                             VerticalAlignment="Center" />

                  <local:HotkeyControl x:Name="RecordHotkeyControl"
                                       Hotkey="{Binding Settings.RecordHotkey.Key, Mode=OneWay}"
                                       HotkeyModifiers="{Binding Settings.RecordHotkey.Modifiers, Mode=OneWay}"
                                       SetHotkeyCommand="{Binding SetHotkeyCommand, Mode=OneTime}"
                                       ErrorMessage="{Binding HotkeyRegisterError, Mode=OneWay}" />
               </StackPanel>

               <StackPanel Orientation="Horizontal"
                           Margin="0,4,0,0">
                  <TextBlock Text="Progress Display:"
                             Margin="0,0,4,1"
                             VerticalAlignment="Center" />
                  <ComboBox ItemsSource="{commonUi:GetEnumValues local:ProgressDisplayType}"
                            SelectedValue="{Binding Settings.ProgressType, Mode=TwoWay}"
                            Height="20"
                            Padding="6,0,0,2"
                            Width="80" />
               </StackPanel>

               <CheckBox Content="Place identified song title on clipboard"
                         Margin="0,6,0,0"
                         IsChecked="{Binding Settings.PutTitleOnClipboard, Mode=TwoWay}" />

               <CheckBox x:Name="OpenShazamCheckbox"
                         Content="Open identified song in Shazam"
                         Margin="0,4,0,0"
                         IsChecked="{Binding Settings.OpenShazamOnResultFound, Mode=TwoWay}" />

               <CheckBox Content="Minimize to tray after recording is done"
                         Margin="8,4,0,0"
                         IsEnabled="{Binding ElementName=KeepOpenInTrayCheckbox, Path=IsChecked, Mode=OneWay}"
                         Visibility="{Binding ElementName=OpenShazamCheckbox, Path=IsChecked, Converter={StaticResource VisibleIfTrue}, Mode=OneWay}"
                         IsChecked="{Binding Settings.HideWindowAfterRecord, Mode=TwoWay}" />
            </StackPanel>
         </commonControls:AnimatedGroupedExpander>

         <commonControls:AnimatedGroupedExpander Header="API Settings"
                                                 GroupName="Settings"
                                                 Margin="0,0,0,4"
                                                 Grid.IsSharedSizeScope="True">
            <StackPanel Margin="16,2,0,0">
               <Grid Margin="0,0,0,4"
                     HorizontalAlignment="Left">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"
                                       SharedSizeGroup="ApiSettingsLabels" />
                     <ColumnDefinition Width="270" />
                  </Grid.ColumnDefinitions>
                  
                  <TextBlock Grid.Column="0"
                             Text="API Key:"
                             Margin="0,0,8,0"
                             VerticalAlignment="Center" />

                  <TextBox Grid.Column="1"
                           x:Name="CustomApiKeyTextBox"
                           Text="{Binding ApiVm.ShazamApiKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                  <TextBlock Grid.Column="1" 
                             Text="Using default API Key"
                             IsHitTestVisible="False"
                             Margin="4,0,0,0"
                             Opacity="0.6"
                             Visibility="{Binding ApiVm.UseDefaultKey, Converter={StaticResource VisibleIfTrue}, Mode=OneWay}"
                             VerticalAlignment="Center" />
               </Grid>

               <Grid Margin="0,0,0,4"
                     Visibility="{Binding ApiVm.CanDisplayQuotaData, Converter={StaticResource VisibleIfTrue}, Mode=OneWay}">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"
                                       SharedSizeGroup="ApiSettingsLabels" />
                     <ColumnDefinition Width="270" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0"
                             Text="Quota:"
                             Margin="0,0,8,0"
                             VerticalAlignment="Center" />

                  <ProgressBar Grid.Column="1"
                               Height="18"
                               Margin="-1,0,1,0"
                               Background="White"
                               Foreground="{StaticResource ProgressBarFillBrush}"
                               Maximum="{Binding ApiVm.QuotaLimit, Mode=OneWay}"
                               Value="{Binding ApiVm.QuotaUsed, Mode=OneWay}"
                               ToolTip="Quota values are updated after every audio identification" />

                  <TextBlock Grid.Column="1"
                             Margin="4,0,0,0"
                             VerticalAlignment="Center"
                             IsHitTestVisible="False">
                     <Run Text="{Binding ApiVm.QuotaUsed, Mode=OneWay}" /> / <Run Text="{Binding ApiVm.QuotaLimit, Mode=OneWay}" />
                  </TextBlock>
               </Grid>

               <TextBlock VerticalAlignment="Center">
                  <Run Text="To get an API Key, follow" />
                  <Hyperlink Command="{x:Static commonUi:UtilityCommands.OpenInBrowserCommand}"
                             CommandParameter="https://github.com/zemoto/WhatAmIHearing?tab=readme-ov-file#rate-limiting">these instructions.</Hyperlink>
               </TextBlock>
            </StackPanel>
         </commonControls:AnimatedGroupedExpander>

         <commonControls:AnimatedGroupedExpander Header="History">
            <Grid Margin="0,4,0,0"
                  IsEnabled="{Binding StateVm.State, Converter={StaticResource IsEqual}, ConverterParameter={x:Static local:AppState.Stopped}, Mode=OneWay}">
               <ListBox x:Name="HistoryListBox"
                        Height="{Binding Settings.HistoryHeight, Mode=TwoWay}"
                        MinHeight="60"
                        Style="{StaticResource HistoryListBoxStyle}"
                        ItemsSource="{Binding History, Mode=OneWay}"
                        SelectedItem="{Binding SelectedSong, Mode=TwoWay}" />
               <commonControls:ResizeGripper Focusable="False"
                                             Template="{StaticResource HistoryResizeGripperTemplate}"
                                             VerticalAlignment="Bottom"
                                             HorizontalAlignment="Center"
                                             Direction="Vertical"
                                             Target="{Binding ElementName=HistoryListBox, Mode=OneTime}" />
            </Grid>
         </commonControls:AnimatedGroupedExpander>

         <ContentControl Content="{Binding SelectedSong, Mode=OneWay}"
                         IsTabStop="False"
                         Visibility="{Binding SelectedSong, Mode=OneWay, Converter={x:Static commonUi:NullVisibilityConverter.Instance}}"
                         Margin="0,6,0,0" />
      </StackPanel>
   </Grid>
</Window>
